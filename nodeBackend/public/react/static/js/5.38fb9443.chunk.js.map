{"version":3,"sources":["assets/arrow.svg","assets/plusWhite.svg","components/List/Modal.jsx","components/List/List.jsx","components/Main/Main.jsx"],"names":["module","exports","Modal","handleClose","data","title","desc","key","saveData","titleInput","useFormInput","descInput","className","type","placeholder","onClick","value","v","useState","change","onChange","e","target","memo","props","show","updateShow","activePage","changeactivePage","globalData","updateGlobalData","updateModal","bool","vals","deleteTask","editTask","addTask","filter","x","i","map","k","id","src","arrow","alt","preventDefault","stopPropagation","console","log","plusWhite","length","itemsCountPerPage","totalItemsCount","pageRangeDisplayed","itemClass","linkClass","login","token","handleres","res","a","json","result","logout","fetch","headers","Accept","method","body","JSON","stringify","date","Date","now"],"mappings":"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","file":"static/js/5.38fb9443.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/arrow.bb59137c.svg\";","module.exports = __webpack_public_path__ + \"static/media/plusWhite.82ebc32b.svg\";","import React, { useRef, useState } from \"react\";\r\nimport \"./Modal.css\";\r\nexport default function Modal({ handleClose, data }) {\r\n  let { title, desc, key, saveData } = data;\r\n  let titleInput = useFormInput(title || \"\");\r\n  let descInput = useFormInput(desc || \"\");\r\n  let save = () => {\r\n    saveData(titleInput.value, descInput.value, key);\r\n    handleClose();\r\n  };\r\n  return (\r\n    <div className=\"modal display-block\">\r\n      <section className=\"modal-main\">\r\n        <div className=\"m-5 p-3 d-flex flex-column\">\r\n          <p className=\"mx-auto font-weight-bold\">TO-DO</p>\r\n          <input\r\n            className=\"m-3 px-3 py-1\"\r\n            type=\"text\"\r\n            {...titleInput}\r\n            placeholder=\"Title\"\r\n          />\r\n          <textarea\r\n            className=\"m-3 px-3 py-2\"\r\n            {...descInput}\r\n            placeholder=\"Description\"\r\n          ></textarea>\r\n          <div className=\"mx-auto d-flex\">\r\n            <button className=\"mx-2 btn btn-success px-4 py-1\" onClick={save}>\r\n              Save\r\n            </button>\r\n            <button\r\n              className=\"mx-2 btn btn-danger px-4 py-1\"\r\n              onClick={handleClose}\r\n            >\r\n              close\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction useFormInput(v) {\r\n  let [value, change] = useState(v);\r\n  let onChange = e => change(e.target.value);\r\n  return { value, onChange };\r\n}\r\n","import React, { useState, memo, useRef } from \"react\";\r\nimport arrow from \"../../assets/arrow.svg\";\r\nimport plusWhite from \"../../assets/plusWhite.svg\";\r\nimport Pagination from \"react-js-pagination\";\r\nimport Modal from \"./Modal\";\r\nimport \"./list.scss\";\r\nconst ITEMSPERPAGE = 10;\r\n\r\nfunction List(props) {\r\n  let [show, updateShow] = useState(false);\r\n  let [activePage, changeactivePage] = useState(1);\r\n  let [globalData, updateGlobalData] = useState({\r\n    title: \"\",\r\n    desc: \"\",\r\n    key: \"\",\r\n    saveData: null\r\n  });\r\n\r\n  let updateModal = (bool, vals) => {\r\n    updateGlobalData(vals);\r\n    updateShow(bool);\r\n  };\r\n  let hideModal = () => {\r\n    let vals = {\r\n      title: \"\",\r\n      desc: \"\",\r\n      key: \"\",\r\n      saveData: null\r\n    };\r\n    updateModal(false, vals);\r\n  };\r\n\r\n  let { data, deleteTask, editTask, addTask } = props;\r\n  data = data || [];\r\n\r\n  return (\r\n    <div className=\"expandable-listview_outerDiv\">\r\n      {show && <Modal handleClose={hideModal} data={globalData}></Modal>}\r\n      <ul className=\"expandable-listview_ul\">\r\n        {data\r\n          .filter(\r\n            (x, i) =>\r\n              i >= (activePage - 1) * ITEMSPERPAGE &&\r\n              i < activePage * ITEMSPERPAGE\r\n          )\r\n          .map(k => {\r\n            return (\r\n              <div key={k.id}>\r\n                <li>\r\n                  <div\r\n                    className=\"expandable-listview_listHeader\"\r\n                    // onClick={handleToggle.bind(this, k)}\r\n                    onClick={() => {\r\n                      let vals = {\r\n                        title: k.title,\r\n                        desc: k.desc,\r\n                        key: k.id,\r\n                        saveData: editTask\r\n                      };\r\n                      updateModal(true, vals);\r\n                    }}\r\n                  >\r\n                    <img src={arrow} className=\"expandable\" alt=\"plus\" />\r\n                    {k.title}\r\n                    <span>\r\n                      <button className=\"deleteButton\" onClick={() => {}}>\r\n                        &#x270E;\r\n                      </button>\r\n                      <button\r\n                        className=\"deleteButton\"\r\n                        onClick={e => {\r\n                          e.preventDefault();\r\n                          e.stopPropagation();\r\n                          console.log(e);\r\n                          deleteTask(k.id);\r\n                        }}\r\n                      >\r\n                        &#x2716;\r\n                      </button>\r\n                    </span>\r\n                  </div>\r\n                </li>\r\n              </div>\r\n            );\r\n          })}\r\n        <div>\r\n          <li>\r\n            <div\r\n              className=\"expandable-listview_listHeader\"\r\n              onClick={() => {\r\n                let vals = {\r\n                  title: \"\",\r\n                  desc: \"\",\r\n                  key: \"\",\r\n                  saveData: addTask\r\n                };\r\n                updateModal(true, vals);\r\n              }}\r\n            >\r\n              <img src={plusWhite} className=\"expandable\" alt=\"plus\" />\r\n              add a new demo\r\n            </div>\r\n          </li>\r\n        </div>\r\n      </ul>\r\n      {data.length > 10 && (\r\n        <div className=\"m-3\">\r\n          <Pagination\r\n            activePage={activePage}\r\n            itemsCountPerPage={ITEMSPERPAGE}\r\n            totalItemsCount={data.length}\r\n            pageRangeDisplayed={5}\r\n            onChange={changeactivePage}\r\n            itemClass=\"page-item\"\r\n            linkClass=\"page-link\"\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default memo(List);\r\n","import React, { memo } from \"react\";\r\nimport List from \"../List/List\";\r\nconst baseUrl = \"\"; // \"http://localhost:4000\";\r\n\r\nfunction Main(props) {\r\n  let { data, login, token } = props;\r\n  let handleres = async res => {\r\n    res = await res.json();\r\n    if (res.result) {\r\n      login(res.token, res.data);\r\n    } else {\r\n      if (res.logout) {\r\n        login();\r\n      }\r\n    }\r\n  };\r\n  let addTask = async (title, desc) => {\r\n    let res = await fetch(baseUrl + \"/todo/add\", {\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        token\r\n      },\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        title,\r\n        desc,\r\n        date: +Date.now()\r\n      })\r\n    });\r\n    handleres(res);\r\n  };\r\n  let deleteTask = async id => {\r\n    let res = await fetch(baseUrl + \"/todo/\" + id, {\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        token\r\n      },\r\n      method: \"DELETE\"\r\n    });\r\n    handleres(res);\r\n  };\r\n  let editTask = async (title, desc, id) => {\r\n    let res = await fetch(baseUrl + \"/todo/\" + id, {\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        token\r\n      },\r\n      method: \"PUT\",\r\n      body: JSON.stringify({\r\n        title,\r\n        desc\r\n      })\r\n    });\r\n    handleres(res);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"col-12 col-lg-8 col-md-10 mx-auto\">\r\n        <List\r\n          data={data}\r\n          deleteTask={deleteTask}\r\n          editTask={editTask}\r\n          addTask={addTask}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default memo(Main);\r\n"],"sourceRoot":""}